generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String         @id @default(uuid())
  username      String         @unique
  email         String         @unique
  password      String
  rooms         RoomUser[]       // relacionamento com RoomUser (usuario participa de várias salas)
  messages      Message[]
  notifications Notification[]
  createdAt     DateTime       @default(now())
}

model Room {
  id            String         @id @default(uuid())
  name          String
  users         RoomUser[]       // relacionamento com RoomUser (sala tem vários usuários)
  messages      Message[]
  notifications Notification[]
  createdAt     DateTime       @default(now())
}

model RoomUser {
  id        String   @id @default(uuid())
  userId    String
  roomId    String
  user      User     @relation(fields: [userId], references: [id])
  room      Room     @relation(fields: [roomId], references: [id])
  joinedAt  DateTime @default(now())

  @@unique([userId, roomId])
}

model Message {
  id            String         @id @default(uuid())
  content       String
  userId        String
  roomId        String
  user          User           @relation(fields: [userId], references: [id])
  room          Room           @relation(fields: [roomId], references: [id])
  notifications Notification[]
  createdAt     DateTime       @default(now())
}

model Notification {
  id        String   @id @default(uuid())
  userId    String
  roomId    String
  messageId String
  isRead    Boolean  @default(false)
  createdAt DateTime @default(now())

  user      User     @relation(fields: [userId], references: [id])
  room      Room     @relation(fields: [roomId], references: [id])
  message   Message  @relation(fields: [messageId], references: [id])
}
