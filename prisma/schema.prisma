generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String         @id @default(uuid())
  username      String         @unique
  email         String         @unique
  password      String
  rooms         RoomUser[]     @relation("UserAsParticipant")
  ownedRooms    Room[]         @relation("OwnerRooms")
  messages      Message[]
  notifications Notification[]
  createdAt     DateTime       @default(now())
}

model Room {
  id            String         @id @default(uuid())
  name          String
  ownerId       String
  owner         User           @relation("OwnerRooms", fields: [ownerId], references: [id])
  users         RoomUser[]     @relation("RoomToRoomUser")
  messages      Message[]
  notifications Notification[]
  createdAt     DateTime       @default(now())
}

model RoomUser {
  id        String   @id @default(uuid())
  userId    String
  roomId    String
  user      User     @relation("UserAsParticipant", fields: [userId], references: [id])
  room      Room     @relation("RoomToRoomUser", fields: [roomId], references: [id])
  joinedAt  DateTime @default(now())

  @@unique([userId, roomId])
}

model Message {
  id            String         @id @default(uuid())
  content       String
  userId        String
  roomId        String
  user          User           @relation(fields: [userId], references: [id])
  room          Room           @relation(fields: [roomId], references: [id])
  notifications Notification[]
  createdAt     DateTime       @default(now())
}

model Notification {
  id        String   @id @default(uuid())
  userId    String
  roomId    String
  messageId String
  isRead    Boolean  @default(false)
  createdAt DateTime @default(now())

  user      User     @relation(fields: [userId], references: [id])
  room      Room     @relation(fields: [roomId], references: [id])
  message   Message  @relation(fields: [messageId], references: [id])
}

model invites {
  id          String   @id @default(uuid())
  userId      String
  invitedUserId String
  room String //optional
  type      Boolean  @default(false) //friend or room
  isAccepted Boolean  @default(false)
  createdAt   DateTime @default(now())

  user      User     @relation(fields: [userId], references: [id])
  room      Room     @relation(fields: [roomId], references: [id])
  message   Message  @relation(fields: [messageId], references: [id])
}
